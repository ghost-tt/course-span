{"version":3,"sources":["components/card/card.js","components/card-list/card-list.js","components/search-box/search-box.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","user","id","name","CardList","users","map","SearchBox","placeholder","handleChange","type","onChange","App","componentDidMount","fetch","method","then","res","json","setState","catch","err","console","error","e","searchField","target","value","state","this","filteredUsers","filter","toLowerCase","includes","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+RAGaA,G,MAAO,SAACC,GAAD,OAChB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,OAAOC,IAAG,+BAA0BH,EAAMI,KAAKC,GAArC,4BACnB,6BAAKL,EAAMI,KAAKE,YCFXC,G,MAAW,SAACP,GACrB,OAAO,qBAAKC,UAAU,YAAf,SAECD,EAAMQ,MAAMC,KAAI,SAAAL,GAAI,OAChB,cAAC,EAAD,CAAgCA,KAAMA,GAA3BA,EAAKE,KAAOF,EAAKC,WCL/BK,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OACrB,uBACIC,KAAK,SACLZ,UAAU,SACVU,YAAaA,EACbG,SAAUF,MCiCHG,G,wDAnCb,WAAYf,GAAQ,IAAD,8BACjB,cAAMA,IAORgB,kBAAoB,WAClBC,MAAM,6CAA8C,CAAEC,OAAQ,QAC3DC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAX,GAAK,OAAI,EAAKc,SAAS,CAAEd,aAC9Be,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAMF,OAZb,EAenBZ,aAAe,SAACe,GACd,EAAKL,SAAS,CAAEM,YAAaD,EAAEE,OAAOC,SAdtC,EAAKC,MAAQ,CACXvB,MAAO,GACPoB,YAAa,IAJE,E,qDAmBT,IAAD,EACwBI,KAAKD,MAA5BvB,EADD,EACCA,MAAOoB,EADR,EACQA,YACTK,EAAgBzB,EAAM0B,QAAO,SAAA9B,GAAI,OAAIA,EAAKE,KAAK6B,cAAcC,SAASR,EAAYO,kBACxF,OACE,sBAAKlC,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CACEU,YAAY,eACZC,aAAcoB,KAAKpB,eAErB,cAAC,EAAD,CAAUJ,MAAOyB,W,GA9BPI,IAAMC,YCOTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBtB,MAAK,YAAkD,IAA/CuB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.17aa99b2.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.styles.css';\r\n\r\nexport const Card = (props) => (\r\n    <div className=\"card-container\">\r\n        <img alt=\"user\" src={`https://robohash.org/${props.user.id}?set=set2&size=180x240`} />\r\n        <h3>{props.user.name}</h3>\r\n    </div>\r\n)","import React from 'react';\r\nimport { Card } from '../card/card';\r\nimport './card-list.styles.css';\r\n\r\nexport const CardList = (props) => {\r\n    return <div className='card-list'>\r\n        {\r\n            props.users.map(user => (\r\n                <Card key={user.name + user.id} user={user} />\r\n            ))\r\n        }\r\n    </div>\r\n}","import React from 'react';\r\nimport './search-box.styles.css';\r\n\r\nexport const SearchBox = ({placeholder, handleChange}) => (\r\n    <input\r\n        type=\"search\"\r\n        className=\"search\"\r\n        placeholder={placeholder}\r\n        onChange={handleChange}\r\n    />\r\n);","import React from 'react';\nimport { CardList } from './components/card-list/card-list';\nimport { SearchBox } from './components/search-box/search-box';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      users: [],\n      searchField: ''\n    };\n  }\n\n  componentDidMount = () => {\n    fetch('https://jsonplaceholder.typicode.com/users', { method: 'GET' })\n      .then(res => res.json())\n      .then(users => this.setState({ users }))\n      .catch(err => console.error(err));\n  }\n\n  handleChange = (e) => {\n    this.setState({ searchField: e.target.value });\n  }\n\n  render() {\n    const { users, searchField } = this.state;\n    const filteredUsers = users.filter(user => user.name.toLowerCase().includes(searchField.toLowerCase()));\n    return (\n      <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n        <SearchBox \n          placeholder=\"search users\"\n          handleChange={this.handleChange}\n        />\n        <CardList users={filteredUsers} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}